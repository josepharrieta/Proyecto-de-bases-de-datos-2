# Defines the number of worker processes. 'auto' usually sets it to the number of CPU cores.
worker_processes auto;

# Configuration for event handling
events {
    # Maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 1024;
}

# Defines settings for HTTP
http {
    # Define an upstream group for the API server
    # 'api' is the service name defined in your docker-compose.yml
    upstream api_server {
        server api:3000; # Points to the api service on its internal port 3000
    }

    # Define an upstream group for the Search service
    # 'search-service' is the service name defined in your docker-compose.yml
    upstream search_service {
        server search-service:3000; # Points to the search-service on its internal port 3000
    }

    # Define the main server block that listens for incoming connections
    server {
        listen 80; # Listen on port 80 for HTTP traffic

        # Location block for requests to the API principal
        # Requests to http://<load-balancer>/api/... will be forwarded
        location /api/ {
            proxy_pass http://api_server/; # Forward to the api_server upstream
            proxy_set_header Host $host; # Preserve the original host header
            proxy_set_header X-Real-IP $remote_addr; # Pass the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Append to the X-Forwarded-For header
            proxy_set_header X-Forwarded-Proto $scheme; # Pass the original scheme (http/https)
        }

        # Location block for requests to the Search service
        # Requests to http://<load-balancer>/search/... will be forwarded
        location /search/ {
            proxy_pass http://search_service/; # Forward to the search_service upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint for Docker healthcheck or monitoring
        # Responds with 200 OK to requests to http://<load-balancer>/health
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain; # Set content type for the response
        }
    }
}